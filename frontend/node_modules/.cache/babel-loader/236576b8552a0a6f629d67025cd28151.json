{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'; // Define a service using a base URL and expected endpoints\n\nexport const userAuthApi = createApi({\n  reducerPath: 'userAuthApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://127.0.0.1:8000/api'\n  }),\n  endpoints: builder => ({\n    registerUser: builder.mutation({\n      query: user => {\n        return {\n          url: 'register',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json',\n            'Accept': 'application/json'\n          }\n        };\n      }\n    }),\n    loginUser: builder.mutation({\n      query: user => {\n        return {\n          url: 'login',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json',\n            'Accept': 'application/json'\n          }\n        };\n      }\n    }),\n    getLoggedUser: builder.query({\n      query: token => {\n        return {\n          url: 'loggeduser',\n          method: 'GET',\n          headers: {\n            'authorization': `Bearer ${token}`\n          }\n        };\n      }\n    }),\n    logoutUser: builder.mutation({\n      query: _ref => {\n        let {\n          token\n        } = _ref;\n        return {\n          url: 'logout',\n          method: 'POST',\n          body: {},\n          headers: {\n            'authorization': `Bearer ${token}`\n          }\n        };\n      }\n    }),\n    getAllEvents: builder.query({\n      query: token => {\n        return {\n          url: 'fetch_event',\n          method: 'GET',\n          headers: {\n            'authorization': `Bearer ${token}`\n          }\n        };\n      }\n    }),\n    getSingleEvents: builder.query({\n      query: (id, token) => {\n        return {\n          url: `event_scheduled/${id}`,\n          method: 'GET',\n          headers: {\n            'authorization': `Bearer ${token}`\n          }\n        };\n      }\n    })\n  })\n}); // Export hooks for usage in functional components, which are\n// auto-generated based on the defined endpoints\n\nexport const {\n  useRegisterUserMutation,\n  useLoginUserMutation,\n  useLogoutUserMutation,\n  useGetLoggedUserQuery,\n  useGetAllEventsQuery,\n  useGetSingleEventsQuery\n} = userAuthApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","userAuthApi","reducerPath","baseQuery","baseUrl","endpoints","builder","registerUser","mutation","query","user","url","method","body","headers","loginUser","getLoggedUser","token","logoutUser","getAllEvents","getSingleEvents","id","useRegisterUserMutation","useLoginUserMutation","useLogoutUserMutation","useGetLoggedUserQuery","useGetAllEventsQuery","useGetSingleEventsQuery"],"sources":["C:/Users/SAURAV SUMAN/Desktop/Ominify Project/frontend/src/sevices/userAuthApi.js"],"sourcesContent":["\r\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\n// Define a service using a base URL and expected endpoints\r\n\r\nexport const userAuthApi = createApi({\r\n  reducerPath: 'userAuthApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'http://127.0.0.1:8000/api' }),\r\n\r\n\r\n  endpoints: (builder) => ({\r\n    registerUser: builder.mutation({\r\n        query:(user)=>{\r\n            return{\r\n                url:'register',\r\n                method:'POST',\r\n                body:user,\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    'Accept': 'application/json',\r\n                }\r\n\r\n\r\n\r\n            }\r\n        }\r\n     \r\n    }),\r\n\r\n\r\n    loginUser: builder.mutation({\r\n      query:(user)=>{\r\n          return{\r\n              url:'login',\r\n              method:'POST',\r\n              body:user,\r\n              headers:{\r\n                  'Content-type':'application/json',\r\n                  'Accept': 'application/json',\r\n              }\r\n\r\n\r\n\r\n          }\r\n      }\r\n   \r\n  }),\r\n\r\n  getLoggedUser: builder.query({\r\n    query: (token) => {\r\n      return {\r\n        url: 'loggeduser',\r\n        method: 'GET',\r\n        headers: {\r\n          'authorization': `Bearer ${token}`,\r\n        }\r\n      }\r\n    }\r\n  }),\r\n\r\n  logoutUser: builder.mutation({\r\n    query: ({ token }) => {\r\n      return {\r\n        url: 'logout',\r\n        method: 'POST',\r\n        body: {},\r\n        headers: {\r\n          'authorization': `Bearer ${token}`,\r\n        }\r\n      }\r\n    }\r\n  }),\r\n\r\n\r\n  getAllEvents: builder.query({\r\n    query: (token) => {\r\n      return {\r\n        url: 'fetch_event',\r\n        method: 'GET',\r\n        headers: {\r\n          'authorization': `Bearer ${token}`,\r\n        }\r\n      }\r\n    }\r\n  }),\r\n\r\n  getSingleEvents: builder.query({\r\n    query: (id,token) => {\r\n      return {\r\n        url: `event_scheduled/${id}`,\r\n        method: 'GET',\r\n        headers: {\r\n          'authorization': `Bearer ${token}`,\r\n        }\r\n      }\r\n    }\r\n  }),\r\n\r\n\r\n  \r\n\r\n\r\n    \r\n\r\n  \r\n\r\n  }),\r\n})\r\n\r\n// Export hooks for usage in functional components, which are\r\n// auto-generated based on the defined endpoints\r\nexport const { useRegisterUserMutation,useLoginUserMutation,useLogoutUserMutation ,useGetLoggedUserQuery,useGetAllEventsQuery,useGetSingleEventsQuery} = userAuthApi"],"mappings":"AACA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C,C,CAEA;;AAEA,OAAO,MAAMC,WAAW,GAAGF,SAAS,CAAC;EACnCG,WAAW,EAAE,aADsB;EAEnCC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAX,CAAD,CAFU;EAKnCC,SAAS,EAAGC,OAAD,KAAc;IACvBC,YAAY,EAAED,OAAO,CAACE,QAAR,CAAiB;MAC3BC,KAAK,EAAEC,IAAD,IAAQ;QACV,OAAM;UACFC,GAAG,EAAC,UADF;UAEFC,MAAM,EAAC,MAFL;UAGFC,IAAI,EAACH,IAHH;UAIFI,OAAO,EAAC;YACJ,gBAAe,kBADX;YAEJ,UAAU;UAFN;QAJN,CAAN;MAYH;IAd0B,CAAjB,CADS;IAoBvBC,SAAS,EAAET,OAAO,CAACE,QAAR,CAAiB;MAC1BC,KAAK,EAAEC,IAAD,IAAQ;QACV,OAAM;UACFC,GAAG,EAAC,OADF;UAEFC,MAAM,EAAC,MAFL;UAGFC,IAAI,EAACH,IAHH;UAIFI,OAAO,EAAC;YACJ,gBAAe,kBADX;YAEJ,UAAU;UAFN;QAJN,CAAN;MAYH;IAdyB,CAAjB,CApBY;IAsCzBE,aAAa,EAAEV,OAAO,CAACG,KAAR,CAAc;MAC3BA,KAAK,EAAGQ,KAAD,IAAW;QAChB,OAAO;UACLN,GAAG,EAAE,YADA;UAELC,MAAM,EAAE,KAFH;UAGLE,OAAO,EAAE;YACP,iBAAkB,UAASG,KAAM;UAD1B;QAHJ,CAAP;MAOD;IAT0B,CAAd,CAtCU;IAkDzBC,UAAU,EAAEZ,OAAO,CAACE,QAAR,CAAiB;MAC3BC,KAAK,EAAE,QAAe;QAAA,IAAd;UAAEQ;QAAF,CAAc;QACpB,OAAO;UACLN,GAAG,EAAE,QADA;UAELC,MAAM,EAAE,MAFH;UAGLC,IAAI,EAAE,EAHD;UAILC,OAAO,EAAE;YACP,iBAAkB,UAASG,KAAM;UAD1B;QAJJ,CAAP;MAQD;IAV0B,CAAjB,CAlDa;IAgEzBE,YAAY,EAAEb,OAAO,CAACG,KAAR,CAAc;MAC1BA,KAAK,EAAGQ,KAAD,IAAW;QAChB,OAAO;UACLN,GAAG,EAAE,aADA;UAELC,MAAM,EAAE,KAFH;UAGLE,OAAO,EAAE;YACP,iBAAkB,UAASG,KAAM;UAD1B;QAHJ,CAAP;MAOD;IATyB,CAAd,CAhEW;IA4EzBG,eAAe,EAAEd,OAAO,CAACG,KAAR,CAAc;MAC7BA,KAAK,EAAE,CAACY,EAAD,EAAIJ,KAAJ,KAAc;QACnB,OAAO;UACLN,GAAG,EAAG,mBAAkBU,EAAG,EADtB;UAELT,MAAM,EAAE,KAFH;UAGLE,OAAO,EAAE;YACP,iBAAkB,UAASG,KAAM;UAD1B;QAHJ,CAAP;MAOD;IAT4B,CAAd;EA5EQ,CAAd;AALwB,CAAD,CAA7B,C,CAwGP;AACA;;AACA,OAAO,MAAM;EAAEK,uBAAF;EAA0BC,oBAA1B;EAA+CC,qBAA/C;EAAsEC,qBAAtE;EAA4FC,oBAA5F;EAAiHC;AAAjH,IAA4I1B,WAAlJ"},"metadata":{},"sourceType":"module"}