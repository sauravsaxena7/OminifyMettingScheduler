{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAURAV SUMAN\\\\Desktop\\\\Ominify Project\\\\frontend\\\\src\\\\component\\\\home\\\\home.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from '@chakra-ui/react';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Spinner } from '@chakra-ui/react';\nimport { useGetLoggedUserQuery, useGetAllEventsQuery } from \"../../sevices/userAuthApi\";\nimport { getToken } from \"../../sevices/LocalStorageServices\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\nimport LaunchIcon from \"@material-ui/icons/Launch\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport \"./home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const token = getToken('token');\n  const [userData, setUserData] = useState({\n    email: \"\",\n    name: \"\"\n  });\n  let events = [];\n  const {\n    data,\n    isFetching,\n    isSuccess\n  } = useGetLoggedUserQuery(token);\n  const {\n    data: data1,\n    isSuccess: isSuccess1\n  } = useGetAllEventsQuery(token);\n  const columns = [{\n    field: \"id\",\n    headerName: \"Events ID\",\n    minWidth: 300,\n    flex: 1\n  }, {\n    field: \"event\",\n    headerName: \"Event Name\",\n    minWidth: 300,\n    flex: 0.5\n  }, {\n    field: \"description\",\n    headerName: \"Event Descriptions\",\n    minWidth: 300,\n    flex: 0.3\n  }, {\n    field: \"s_t\",\n    headerName: \"Start time\",\n    type: \"number\",\n    minWidth: 300,\n    flex: 0.5\n  }, {\n    field: \"d_o_w\",\n    headerName: \"Day Of Week\",\n    minWidth: 300,\n    flex: 0.3\n  }, {\n    field: \"e_t\",\n    headerName: \"End time\",\n    type: \"number\",\n    minWidth: 300,\n    flex: 0.5\n  }, {\n    field: \"actions\",\n    flex: 0.3,\n    headerName: \"Actions\",\n    type: \"number\",\n    sortable: false,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: `/event_scheduled/${params.getValue(params.id, \"id\")}`,\n        children: /*#__PURE__*/_jsxDEV(LaunchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  const rows = [];\n  events && events.forEach(item => {\n    rows.push({\n      event: item.event_name,\n      id: item.id,\n      description: item.description,\n      e_t: item.end_time + \" : \" + \"00\",\n      s_t: item.start_time + \" : \" + \"00\",\n      d_o_w: item.day_of_the_week\n    });\n  });\n  useEffect(() => {\n    if (data && isSuccess) {\n      setUserData({\n        email: data.user.email,\n        name: data.user.name\n      });\n    }\n\n    if (data1 && isSuccess1) {\n      events = Object.values(data1.events);\n      ;\n      events.forEach(item => {\n        console.log(item);\n      });\n    }\n  }, [data, isSuccess, isSuccess1, data1]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: isFetching ? /*#__PURE__*/_jsxDEV(Spinner, {\n      thickness: \"4px\",\n      speed: \"0.65s\",\n      emptyColor: \"gray.200\",\n      color: \"blue.500\",\n      size: \"xl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"myOrdersPage\",\n        children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: rows,\n          columns: columns,\n          pageSize: 10,\n          disableSelectionOnClick: true,\n          className: \"myOrdersTable\",\n          autoHeight: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          id: \"myOrdersHeading\",\n          children: [data.user.name, \"'s Events\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 1\n  }, this);\n};\n\n_s(Home, \"l/gyyJv1FIZRoiNIb1vZ2YDMjWI=\", false, function () {\n  return [useGetLoggedUserQuery, useGetAllEventsQuery];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Button","React","Fragment","useEffect","useState","Spinner","useGetLoggedUserQuery","useGetAllEventsQuery","getToken","Typography","Link","LaunchIcon","DataGrid","Home","token","userData","setUserData","email","name","events","data","isFetching","isSuccess","data1","isSuccess1","columns","field","headerName","minWidth","flex","type","sortable","renderCell","params","getValue","id","rows","forEach","item","push","event","event_name","description","e_t","end_time","s_t","start_time","d_o_w","day_of_the_week","user","Object","values","console","log"],"sources":["C:/Users/SAURAV SUMAN/Desktop/Ominify Project/frontend/src/component/home/home.js"],"sourcesContent":["import { Button } from '@chakra-ui/react'\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\n\r\nimport { Spinner } from '@chakra-ui/react';\r\n\r\nimport { useGetLoggedUserQuery,useGetAllEventsQuery} from \"../../sevices/userAuthApi\";\r\n\r\nimport {getToken} from \"../../sevices/LocalStorageServices\";\r\n\r\n\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport LaunchIcon from \"@material-ui/icons/Launch\";\r\n\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\n\r\nimport \"./home.css\";\r\n\r\nconst Home = () => {\r\n\r\n  const token = getToken('token');\r\n\r\n\r\n  const [userData,setUserData] = useState({\r\n    email:\"\",\r\n    name:\"\"\r\n  })\r\n\r\n  let events = [];\r\n\r\n  const {data ,isFetching,isSuccess} = useGetLoggedUserQuery(token);\r\n\r\n  const {data:data1,isSuccess:isSuccess1} = useGetAllEventsQuery(token);\r\n\r\n\r\n\r\n  \r\n\r\n  const columns=[\r\n    {field:\"id\",headerName:\"Events ID\",minWidth:300,flex:1},\r\n    {\r\n        field:\"event\",\r\n        headerName:\"Event Name\",\r\n        minWidth:300,\r\n        flex:0.5,\r\n       \r\n    },\r\n    {\r\n        field:\"description\",\r\n        headerName:\"Event Descriptions\",\r\n        minWidth:300,\r\n        flex:0.3,\r\n    },\r\n    {\r\n        field:\"s_t\",\r\n        headerName:\"Start time\",\r\n        type:\"number\",\r\n        minWidth:300,\r\n        flex:0.5,\r\n    },\r\n\r\n    {\r\n      field:\"d_o_w\",\r\n      headerName:\"Day Of Week\",\r\n      minWidth:300,\r\n      flex:0.3,\r\n  },\r\n\r\n    {\r\n      field:\"e_t\",\r\n      headerName:\"End time\",\r\n      type:\"number\",\r\n      minWidth:300,\r\n      flex:0.5,\r\n  },\r\n\r\n  \r\n    {\r\n      field:\"actions\",\r\n      flex:0.3,\r\n      headerName:\"Actions\",\r\n      type:\"number\",\r\n      sortable:false,\r\n      renderCell:(params)=>{\r\n        return(\r\n          <Link to={`/event_scheduled/${params.getValue(params.id,\"id\")}`}>\r\n\r\n                <LaunchIcon/>\r\n\r\n          </Link>\r\n          \r\n        );\r\n      },\r\n      \r\n    },\r\n\r\n\r\n];\r\n\r\nconst rows=[];\r\n\r\n\r\n    \r\n\r\nevents && events.forEach((item)=>{\r\n  rows.push({\r\n    event:item.event_name,\r\n    id:item.id,\r\n    description:item.description,\r\n    e_t:item.end_time+\" : \"+\"00\",\r\n    s_t:item.start_time+\" : \"+\"00\",\r\n    d_o_w:item.day_of_the_week,\r\n\r\n\r\n});\r\n\r\n});\r\n\r\n\r\n  useEffect(()=>{\r\n    if(data && isSuccess){\r\n\r\n      setUserData({\r\n        email:data.user.email,\r\n        name:data.user.name,\r\n\r\n      })\r\n\r\n    }\r\n\r\n    if(data1 && isSuccess1){\r\n\r\n      events=Object.values(data1.events);;\r\n      \r\n\r\n      events.forEach((item)=>{\r\n\r\n        console.log(item);\r\n      })\r\n\r\n    }\r\n  },[data,isSuccess,isSuccess1,data1])\r\n\r\n  \r\n  return (\r\n\r\n<Fragment>\r\n  {isFetching ? (\r\n    <Spinner\r\n  thickness='4px'\r\n  speed='0.65s'\r\n  emptyColor='gray.200'\r\n  color='blue.500'\r\n  size='xl'\r\n/>\r\n  ):(\r\n\r\n    <Fragment>\r\n\r\n<div className=\"myOrdersPage\">\r\n            <DataGrid\r\n              rows={rows}\r\n              columns={columns}\r\n              pageSize={10}\r\n              disableSelectionOnClick\r\n              className=\"myOrdersTable\"\r\n              autoHeight\r\n            />\r\n  \r\n            <Typography id=\"myOrdersHeading\">{data.user.name}'s Events</Typography>\r\n          </div>\r\n\r\n\r\n       \r\n    </Fragment>\r\n    \r\n\r\n  )}\r\n</Fragment>\r\n\r\n\r\n\r\n\r\n   \r\n  )\r\n}\r\n\r\nexport default Home"],"mappings":"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"},"metadata":{},"sourceType":"module"}