{"ast":null,"code":"import { extend, isNullOrUndefined } from './util';\nimport { defaultCulture } from './internationalization';\n/**\n * L10n modules provides localized text for different culture.\n * ```typescript\n * import {setCulture} from '@syncfusion/ts-base-library';\n * //load global locale object common for all components.\n * L10n.load({\n *    'fr-BE': {\n *       'button': {\n *            'check': 'vérifié'\n *        }\n *    }\n * });\n * //set globale default locale culture.\n * setCulture('fr-BE');\n * let instance: L10n = new L10n('button', {\n *    check: 'checked'\n * });\n * //Get locale text for current property.\n * instance.getConstant('check');\n * //Change locale culture in a component.\n * instance.setLocale('en-US');\n * ```\n */\n\nvar L10n =\n/** @class */\nfunction () {\n  /**\n   * Constructor\n   *\n   * @param {string} controlName ?\n   * @param {Object} localeStrings ?\n   * @param {string} locale ?\n   */\n  function L10n(controlName, localeStrings, locale) {\n    this.controlName = controlName;\n    this.localeStrings = localeStrings;\n    this.setLocale(locale || defaultCulture);\n  }\n  /**\n   * Sets the locale text\n   *\n   * @param {string} locale ?\n   * @returns {void} ?\n   */\n\n\n  L10n.prototype.setLocale = function (locale) {\n    var intLocale = this.intGetControlConstant(L10n.locale, locale);\n    this.currentLocale = intLocale || this.localeStrings;\n  };\n  /**\n   * Sets the global locale for all components.\n   *\n   * @param {Object} localeObject - specifies the localeObject to be set as global locale.\n   * @returns {void} ?\n   */\n\n\n  L10n.load = function (localeObject) {\n    this.locale = extend(this.locale, localeObject, {}, true);\n  };\n  /**\n   * Returns current locale text for the property based on the culture name and control name.\n   *\n   * @param {string} prop - specifies the property for which localize text to be returned.\n   * @returns {string} ?\n   */\n\n\n  L10n.prototype.getConstant = function (prop) {\n    // Removed conditional operator because this method does not return correct value when passing 0 as value in localization\n    if (!isNullOrUndefined(this.currentLocale[prop])) {\n      return this.currentLocale[prop];\n    } else {\n      return this.localeStrings[prop] || '';\n    }\n  };\n  /**\n   * Returns the control constant object for current object and the locale specified.\n   *\n   * @param {Object} curObject ?\n   * @param {string} locale ?\n   * @returns {Object} ?\n   */\n\n\n  L10n.prototype.intGetControlConstant = function (curObject, locale) {\n    if (curObject[locale]) {\n      return curObject[locale][this.controlName];\n    }\n\n    return null;\n  };\n\n  L10n.locale = {};\n  return L10n;\n}();\n\nexport { L10n };","map":null,"metadata":{},"sourceType":"module"}