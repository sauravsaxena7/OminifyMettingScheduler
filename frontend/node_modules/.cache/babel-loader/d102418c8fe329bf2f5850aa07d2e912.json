{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'; // Define a service using a base URL and expected endpoints\n\nexport const userAuthApi = createApi({\n  reducerPath: 'userAuthApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://127.0.0.1:8000/api'\n  }),\n  endpoints: builder => ({\n    registerUser: builder.mutation({\n      query: user => {\n        return {\n          url: 'register',\n          method: 'POST',\n          body: user,\n          dataType: 'json',\n          headers: {\n            'Content-type': 'application/json',\n            'Accept': 'application/json'\n          }\n        };\n      }\n    }),\n    loginUser: builder.mutation({\n      query: user => {\n        return {\n          url: 'login',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json',\n            'Accept': 'application/json'\n          }\n        };\n      }\n    })\n  })\n}); // Export hooks for usage in functional components, which are\n// auto-generated based on the defined endpoints\n\nexport const {\n  useRegisterUserMutation\n} = userAuthApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","userAuthApi","reducerPath","baseQuery","baseUrl","endpoints","builder","registerUser","mutation","query","user","url","method","body","dataType","headers","loginUser","useRegisterUserMutation"],"sources":["C:/Users/SAURAV SUMAN/Desktop/Ominify Project/frontend/src/sevices/userAuthApi.js"],"sourcesContent":["\r\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\n// Define a service using a base URL and expected endpoints\r\n\r\nexport const userAuthApi = createApi({\r\n  reducerPath: 'userAuthApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'http://127.0.0.1:8000/api' }),\r\n  endpoints: (builder) => ({\r\n    registerUser: builder.mutation({\r\n        query:(user)=>{\r\n            return{\r\n                url:'register',\r\n                method:'POST',\r\n                body:user,\r\n                dataType:'json',\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    'Accept': 'application/json',\r\n                }\r\n\r\n\r\n\r\n            }\r\n        }\r\n     \r\n    }),\r\n\r\n    loginUser: builder.mutation({\r\n      query: (user) => {\r\n        return {\r\n          url: 'login',\r\n          method: 'POST',\r\n          body: user,\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n            'Accept': 'application/json',\r\n          }\r\n        }\r\n      }\r\n    }),\r\n\r\n  }),\r\n})\r\n\r\n// Export hooks for usage in functional components, which are\r\n// auto-generated based on the defined endpoints\r\nexport const { useRegisterUserMutation } = userAuthApi"],"mappings":"AACA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C,C,CAEA;;AAEA,OAAO,MAAMC,WAAW,GAAGF,SAAS,CAAC;EACnCG,WAAW,EAAE,aADsB;EAEnCC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAX,CAAD,CAFU;EAGnCC,SAAS,EAAGC,OAAD,KAAc;IACvBC,YAAY,EAAED,OAAO,CAACE,QAAR,CAAiB;MAC3BC,KAAK,EAAEC,IAAD,IAAQ;QACV,OAAM;UACFC,GAAG,EAAC,UADF;UAEFC,MAAM,EAAC,MAFL;UAGFC,IAAI,EAACH,IAHH;UAIFI,QAAQ,EAAC,MAJP;UAKFC,OAAO,EAAC;YACJ,gBAAe,kBADX;YAEJ,UAAU;UAFN;QALN,CAAN;MAaH;IAf0B,CAAjB,CADS;IAoBvBC,SAAS,EAAEV,OAAO,CAACE,QAAR,CAAiB;MAC1BC,KAAK,EAAGC,IAAD,IAAU;QACf,OAAO;UACLC,GAAG,EAAE,OADA;UAELC,MAAM,EAAE,MAFH;UAGLC,IAAI,EAAEH,IAHD;UAILK,OAAO,EAAE;YACP,gBAAgB,kBADT;YAEP,UAAU;UAFH;QAJJ,CAAP;MASD;IAXyB,CAAjB;EApBY,CAAd;AAHwB,CAAD,CAA7B,C,CAwCP;AACA;;AACA,OAAO,MAAM;EAAEE;AAAF,IAA8BhB,WAApC"},"metadata":{},"sourceType":"module"}