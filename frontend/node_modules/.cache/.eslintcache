[{"C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\index.js":"1","C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\App.js":"2","C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\utils\\theme.js":"3","C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\component\\header\\header.js":"4","C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\component\\auth\\loginSignUp.js":"5","C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\component\\auth\\Login.js":"6","C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\component\\auth\\Register.js":"7","C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\component\\navbar\\Navbar.js":"8","C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\component\\auth\\main.js":"9","C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\component\\navbar\\logo.js":"10","C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\app\\store.js":"11","C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\sevices\\userAuthApi.js":"12","C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\component\\home\\home.js":"13","C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\sevices\\LocalStorageServices.js":"14","C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\component\\home\\EvenDetails.js":"15"},{"size":741,"mtime":1654339875286,"results":"16","hashOfConfig":"17"},{"size":700,"mtime":1654533104766,"results":"18","hashOfConfig":"17"},{"size":443,"mtime":1654500825728,"results":"19","hashOfConfig":"17"},{"size":146,"mtime":1654310175792,"results":"20","hashOfConfig":"17"},{"size":694,"mtime":1654496806932,"results":"21","hashOfConfig":"17"},{"size":3457,"mtime":1654504012892,"results":"22","hashOfConfig":"17"},{"size":4651,"mtime":1654504039734,"results":"23","hashOfConfig":"17"},{"size":5456,"mtime":1654570396274,"results":"24","hashOfConfig":"17"},{"size":404,"mtime":1654335903735,"results":"25","hashOfConfig":"17"},{"size":518,"mtime":1654570335348,"results":"26","hashOfConfig":"17"},{"size":419,"mtime":1654339969528,"results":"27","hashOfConfig":"17"},{"size":2338,"mtime":1654570590525,"results":"28","hashOfConfig":"17"},{"size":3366,"mtime":1654570651283,"results":"29","hashOfConfig":"17"},{"size":313,"mtime":1654499686665,"results":"30","hashOfConfig":"17"},{"size":4312,"mtime":1654598867498,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"f37oz6",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"35"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\index.js",[],[],[],"C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\App.js",[],[],"C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\utils\\theme.js",[],[],"C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\component\\header\\header.js",[],[],"C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\component\\auth\\loginSignUp.js",[],[],"C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\component\\auth\\Login.js",["84","85","86"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { useLoginUserMutation } from '../../sevices/userAuthApi';\r\n\r\nimport { storeToken} from \"../../sevices/LocalStorageServices\"\r\nimport \"./login.css\";\r\n\r\nimport {\r\n    Alert,\r\n    AlertIcon,\r\n    AlertTitle,\r\n    AlertDescription,\r\n    CloseButton,\r\n    useDisclosure,\r\n  } from '@chakra-ui/react'\r\n\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [error, setError] = useState({\r\n        status: false,\r\n        msg: \"\",\r\n        type: \"\"\r\n      })\r\n\r\n      const {\r\n        isOpen: isVisible,\r\n        onClose,\r\n        onOpen,\r\n      } = useDisclosure({ defaultIsOpen: true })\r\n\r\n      const navigate = useNavigate();\r\n\r\n      const [loginUser] = useLoginUserMutation()\r\n\r\n    const handleSubmit2 = async (e) => {\r\n\r\n        e.preventDefault();\r\n    const data = new FormData(e.currentTarget);\r\n    const actualData = {\r\n      email: data.get('email'),\r\n      password: data.get('password'),\r\n    }\r\n\r\n    if (actualData.email && actualData.password) {\r\n        const res = await loginUser(actualData)\r\n        console.log(res);\r\n        if (res.data && res.data.status === \"success\") {\r\n          // Store Token Code here\r\n          storeToken(res.data.token)\r\n          navigate('/Home')\r\n        }\r\n        if (res.error && res.error.data.status === \"failed\") {\r\n          setError({ status: true, msg: res.error.data.message, type: 'error' })\r\n        }\r\n      } else {\r\n        setError({ status: true, msg: \"All Fields are Required\", type: 'error' })\r\n      }\r\n    }\r\n    \r\n\r\n\r\n\r\n\r\n   useEffect(()=>{\r\n    const inputs = document.querySelectorAll(\".input\");\r\n\r\n\r\n    function addcl(){\r\n        let parent = this.parentNode.parentNode;\r\n        parent.classList.add(\"focus\");\r\n    }\r\n    \r\n    function remcl(){\r\n        let parent = this.parentNode.parentNode;\r\n        if(this.value === \"\"){\r\n            parent.classList.remove(\"focus\");\r\n        }\r\n    }\r\n    \r\n    \r\n    inputs.forEach(input => {\r\n        input.addEventListener(\"focus\", addcl);\r\n        input.addEventListener(\"blur\", remcl);\r\n    });\r\n    \r\n    \r\n   })\r\n   \r\n   \r\n  return <>\r\n\r\n  <div className='container'>\r\n  <div className=\"login-content\">\r\n  <form   onSubmit={handleSubmit2}>\r\n  \r\n  <div className=\"input-div one\">\r\n      <div className='i'>\r\n\r\n      <i class=\"fas fa-user\"></i>\r\n\r\n\r\n      </div>\r\n      <div className='div'>\r\n           <h5>Email</h5>\r\n           <input className='input' type=\"email\" name='email' />\r\n\r\n      </div>\r\n  </div>\r\n\r\n             <div className=\"input-div pass\">\r\n           \t\t   <div className=\"i\"> \r\n           \t\t    \t<i className=\"fas fa-lock\"></i>\r\n           \t\t   </div>\r\n           \t\t   <div className=\"div\">\r\n           \t\t    \t<h5>Password</h5>\r\n           \t\t    \t<input type=\"password\" className=\"input\" name='password'/>\r\n            \t   </div>\r\n            \t</div>\r\n\r\n                <a href=\"#\">Forgot Password?</a>\r\n            \t<input type=\"submit\" class=\"btn\" value=\"Login\"/>\r\n\r\n  \r\n  </form>\r\n\r\n\r\n  </div>\r\n\r\n\r\n  {error.status ?\r\n    <div>\r\n           <Alert status={error.type}>\r\n  <AlertIcon />\r\n  <AlertTitle>{error.msg}</AlertTitle>\r\n  <AlertDescription>{error.desc}</AlertDescription>\r\n  <CloseButton\r\n        alignSelf='flex-start'\r\n        position='relative'\r\n        right={-1}\r\n        top={-1}\r\n        onClick={onClose}\r\n      />\r\n</Alert>\r\n    </div>\r\n    : ''}\r\n  </div>\r\n\r\n\r\n  </>\r\n  \r\n}\r\n\r\nexport default Login","C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\component\\auth\\Register.js",["87","88"],[],"import React, { useState } from 'react'\r\n\r\nimport \"./login.css\";\r\n\r\n\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\n\r\nimport { useRegisterUserMutation } from '../../sevices/userAuthApi';\r\nimport { storeToken} from \"../../sevices/LocalStorageServices\"\r\n\r\nimport {\r\n     Alert,\r\n     AlertIcon,\r\n     AlertTitle,\r\n     AlertDescription,\r\n     CloseButton,\r\n     useDisclosure,\r\n   } from '@chakra-ui/react'\r\n\r\nconst Register = () => {\r\n\r\n     const [error, setError] = useState({\r\n          status: false,\r\n          msg: \"\",\r\n          type: \"\",\r\n          desc:\"\",\r\n        })\r\n\r\n       \r\n\r\n        const {\r\n          isOpen: isVisible,\r\n          onClose,\r\n          onOpen,\r\n        } = useDisclosure({ defaultIsOpen: true })\r\n\r\n        const navigate = useNavigate();\r\n        const [registerUser]=useRegisterUserMutation();\r\n\r\n     const handleSubmit = async (e) => {\r\n          e.preventDefault();\r\n          const data = new FormData(e.currentTarget);\r\n          const actualData = {\r\n               name: data.get('name'),\r\n               email: data.get('email'),\r\n               password: data.get('password'),\r\n               password_confirmation: data.get('password_confirmation'),\r\n               _token:\"{{ csrf_token() }}\",\r\n             }\r\n\r\n          if (actualData.name && actualData.email && actualData.password && actualData.password_confirmation && actualData.tc !== null) {\r\n\r\n               if (actualData.password === actualData.password_confirmation) {\r\n                    const user1 = JSON.parse(JSON.stringify(actualData))\r\n\r\n                     const res = await registerUser(user1);\r\n\r\n                     if(res.data.status === \"success\"){\r\n                          //store token\r\n                          storeToken(res.data.token);\r\n                          navigate('/Home')\r\n                     }\r\n\r\n                     if(res.data.status === \"failed\"){\r\n                         setError({ status: true, msg: res.data.message, desc:\"Email Already taken\", type: 'error' })\r\n\r\n                     }\r\n\r\n                   \r\n                    \r\n               }\r\n               \r\n               else {\r\n                    setError({ status: true, msg: \"Password and Confirm Password Doesn't Match\", type: 'error' })\r\n                  }\r\n\r\n          }else {\r\n               setError({ status: true, msg: \"All Fields are Required\", type: 'error' })\r\n             }\r\n\r\n     }\r\n\r\n   \r\n    return <>\r\n\r\n    <div className='container'>\r\n    <div className=\"login-content\">\r\n    <form onSubmit={handleSubmit} >\r\n    \r\n    <div className=\"input-div one\">\r\n        <div className='i'>\r\n  \r\n        \r\n        <i class=\"fas fa-user\"></i>\r\n  \r\n        </div>\r\n        \r\n        <div className='div'>\r\n             <h5>Name</h5>\r\n             <input className='input' type=\"text\" name=\"name\"  />\r\n  \r\n        </div>\r\n    </div>\r\n    <div className=\"input-div one\">\r\n        <div className='i'>\r\n  \r\n        \r\n        <i class=\"fa fa-envelope\"></i>\r\n  \r\n  \r\n        </div>\r\n        \r\n        <div className='div'>\r\n             <h5>Email</h5>\r\n             <input className='input' type=\"email\" name='email' />\r\n  \r\n        </div>\r\n    </div>\r\n  \r\n               <div className=\"input-div pass\">\r\n                        <div className=\"i\"> \r\n                             <i className=\"fas fa-lock\"></i>\r\n                        </div>\r\n                        <div className=\"div\">\r\n                             <h5>Password</h5>\r\n                             <input type=\"password\" className=\"input\" name='password'/>\r\n                     </div>\r\n                  </div>\r\n\r\n                  <div className=\"input-div pass\">\r\n                        <div className=\"i\"> \r\n                             <i className=\"fas fa-lock\"></i>\r\n                        </div>\r\n                        <div className=\"div\">\r\n                             <h5>Confirm Password</h5>\r\n                             <input type=\"password\" className=\"input\" name='password_confirmation'/>\r\n                     </div>\r\n                  </div>\r\n  \r\n  \r\n                 \r\n                  <input type=\"submit\" class=\"btn\" value=\"Login\"/>\r\n  \r\n    \r\n    </form>\r\n\r\n\r\n  \r\n  \r\n    </div>\r\n    {error.status ?\r\n    <div>\r\n           <Alert status={error.type}>\r\n  <AlertIcon />\r\n  <AlertTitle>{error.msg}</AlertTitle>\r\n  <AlertDescription>{error.desc}</AlertDescription>\r\n  <CloseButton\r\n        alignSelf='flex-start'\r\n        position='relative'\r\n        right={-1}\r\n        top={-1}\r\n        onClick={onClose}\r\n      />\r\n</Alert>\r\n    </div>\r\n    : ''}\r\n  \r\n  \r\n    </div>\r\n  \r\n  \r\n  \r\n      </>;\r\n}\r\n\r\n\r\n\r\nexport default Register","C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\component\\navbar\\Navbar.js",["89","90","91","92"],[],"import React, { useState } from 'react'\r\n\r\nimport { Link, Box, Flex, Text, Button, Stack } from \"@chakra-ui/react\";\r\n\r\nimport Logo from \"./logo\";\r\n\r\nimport {getToken, removeToken} from \"../../sevices/LocalStorageServices\"\r\n\r\nimport { useLogoutUserMutation,useGetLoggedUserQuery} from \"../../sevices/userAuthApi\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport {\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n  CloseButton,\r\n  useDisclosure,\r\n} from '@chakra-ui/react'\r\n\r\nconst Navbar = (props) => {\r\n\r\n  \r\n\r\n\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    return (\r\n        <NavBarContainer {...props}>\r\n          <Logo\r\n            w=\"500px\"\r\n            color={[\"white\", \"white\", \"primary.500\", \"primary.500\"]}\r\n          />\r\n          <MenuToggle toggle={toggle} isOpen={isOpen} />\r\n          <MenuLinks isOpen={isOpen} />\r\n        </NavBarContainer>\r\n      );\r\n    \r\n};\r\n\r\nconst CloseIcon = () => (\r\n    <svg width=\"24\" viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <title>Close</title>\r\n      <path\r\n        fill=\"white\"\r\n        d=\"M9.00023 7.58599L13.9502 2.63599L15.3642 4.04999L10.4142 8.99999L15.3642 13.95L13.9502 15.364L9.00023 10.414L4.05023 15.364L2.63623 13.95L7.58623 8.99999L2.63623 4.04999L4.05023 2.63599L9.00023 7.58599Z\"\r\n      />\r\n    </svg>\r\n  );\r\n\r\n  const MenuIcon = () => (\r\n    <svg\r\n      width=\"24px\"\r\n      viewBox=\"0 0 20 20\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      fill=\"white\"\r\n    >\r\n      <title>Menu</title>\r\n      <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\r\n    </svg>\r\n  );\r\n\r\n\r\n  const MenuToggle = ({ toggle, isOpen }) => {\r\n    return (\r\n      <Box display={{ base: \"block\", md: \"none\" }} onClick={toggle}>\r\n        {isOpen ? <CloseIcon /> : <MenuIcon />}\r\n      </Box>\r\n    );\r\n  };\r\n\r\n\r\n  const MenuItem = ({ children, isLast, to = \"/\", ...rest }) => {\r\n    return (\r\n      <Link href={to}>\r\n        <Text display=\"block\" {...rest}>\r\n          {children}\r\n        </Text>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n\r\n  \r\n\r\n\r\n  const MenuLinks = ({ isOpen }) => {\r\n\r\n    const [error, setError] = useState({\r\n      status: false,\r\n      msg: \"\",\r\n      type: \"\"\r\n    })\r\n\r\n    const {\r\n      isOpen: isVisible,\r\n      onClose,\r\n      onOpen,\r\n    } = useDisclosure({ defaultIsOpen: true })\r\n  \r\n   \r\n\r\n\r\n    const token = getToken();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [logoutUser] = useLogoutUserMutation();\r\n\r\n    \r\n\r\n    const HandleLogout = async ()=>{\r\n\r\n      const res = await logoutUser({ token });\r\n\r\n\r\n      if(res.data.status === \"success\")\r\n      removeToken('token');\r\n      navigate('/loginSignUp');\r\n      \r\n\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n    return (\r\n      <Box\r\n        display={{ base: isOpen ? \"block\" : \"none\", md: \"block\" }}\r\n        flexBasis={{ base: \"100%\", md: \"auto\" }}\r\n      >\r\n        {error.status ?\r\n    <div>\r\n           <Alert status={error.type}>\r\n  <AlertIcon />\r\n  <AlertTitle>{error.msg}</AlertTitle>\r\n  <AlertDescription>{error.desc}</AlertDescription>\r\n  <CloseButton\r\n        alignSelf='flex-start'\r\n        position='relative'\r\n        right={-1}\r\n        top={-1}\r\n        onClick={onClose}\r\n      />\r\n</Alert>\r\n    </div>\r\n    : ''}\r\n\r\n        <Stack\r\n          spacing={8}\r\n          align=\"center\"\r\n          justify={[\"center\", \"space-between\", \"flex-end\", \"flex-end\"]}\r\n          direction={[\"column\", \"row\", \"row\", \"row\"]}\r\n          pt={[4, 4, 0, 0]}\r\n        >\r\n          \r\n          <MenuItem to=\"/\">Home</MenuItem>\r\n          {token ? ( <MenuItem to=\"/sheduled\">Scheduled Your Meeting</MenuItem>)\r\n          :( <MenuItem to=\"/loginSignUp\">Scheduled Your Meeting</MenuItem>)}\r\n         \r\n         \r\n          {/* <MenuItem to=\"/faetures\">Features </MenuItem>\r\n          <MenuItem to=\"/pricing\">Pricing </MenuItem> */}\r\n\r\n          {token ? (\r\n         <MenuItem isLast>\r\n         <Button\r\n         onClick={HandleLogout}\r\n           size=\"sm\"\r\n           rounded=\"md\"\r\n           color={[\"primary.1000\", \"primary.1000\", \"white\", \"white\"]}\r\n           bg={[\"white\", \"white\", \"primary.1000\", \"primary.1000\"]}\r\n           _hover={{\r\n             bg: [\"primary.100\", \"primary.100\", \"primary.600\", \"primary.600\"]\r\n           }}\r\n         >\r\n           Logout\r\n         </Button>\r\n       </MenuItem>\r\n          )\r\n          :\r\n          \r\n          (\r\n            <MenuItem to=\"/loginSignUp\" isLast>\r\n            <Button\r\n              size=\"sm\"\r\n              rounded=\"md\"\r\n              color={[\"primary.500\", \"primary.500\", \"white\", \"white\"]}\r\n              bg={[\"white\", \"white\", \"primary.500\", \"primary.500\"]}\r\n              _hover={{\r\n                bg: [\"primary.100\", \"primary.100\", \"primary.600\", \"primary.600\"]\r\n              }}\r\n            >\r\n              LoginSignUp\r\n            </Button>\r\n          </MenuItem>\r\n\r\n          \r\n          )\r\n          \r\n          }        \r\n           \r\n        </Stack>\r\n\r\n        \r\n      </Box>\r\n    );\r\n  };\r\n\r\n\r\n  const NavBarContainer = ({ children, ...props }) => {\r\n    return (\r\n      <Flex\r\n        as=\"nav\"\r\n        align=\"center\"\r\n        justify=\"space-between\"\r\n        wrap=\"wrap\"\r\n        w=\"100%\"\r\n        mb={8}\r\n        p={8}\r\n        bg={[\"primary.500\", \"primary.500\", \"transparent\", \"transparent\"]}\r\n        color={[\"white\", \"white\", \"primary.700\", \"primary.700\"]}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </Flex>\r\n    );\r\n  };\r\n\r\n\r\n\r\nexport default Navbar","C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\component\\auth\\main.js",["93"],[],"const inputs = document.querySelectorAll(\".input\");\r\n\r\n\r\nfunction addcl(){\r\n\tlet parent = this.parentNode.parentNode;\r\n\tparent.classList.add(\"focus\");\r\n}\r\n\r\nfunction remcl(){\r\n\tlet parent = this.parentNode.parentNode;\r\n\tif(this.value == \"\"){\r\n\t\tparent.classList.remove(\"focus\");\r\n\t}\r\n}\r\n\r\n\r\ninputs.forEach(input => {\r\n\tinput.addEventListener(\"focus\", addcl);\r\n\tinput.addEventListener(\"blur\", remcl);\r\n});",[],"C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\component\\navbar\\logo.js",[],[],"C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\app\\store.js",[],[],"C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\sevices\\userAuthApi.js",[],[],"C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\component\\home\\home.js",["94","95","96","97","98"],[],"import { Button } from '@chakra-ui/react'\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\n\r\nimport { Spinner } from '@chakra-ui/react';\r\n\r\nimport { useGetLoggedUserQuery,useGetAllEventsQuery} from \"../../sevices/userAuthApi\";\r\n\r\nimport {getToken} from \"../../sevices/LocalStorageServices\";\r\n\r\n\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport LaunchIcon from \"@material-ui/icons/Launch\";\r\n\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\n\r\n\r\nimport \"./home.css\";\r\n\r\nconst Home = () => {\r\n\r\n  const token = getToken('token');\r\n\r\n\r\n  const [userData,setUserData] = useState({\r\n    email:\"\",\r\n    name:\"\"\r\n  })\r\n\r\n  let events = [];\r\n\r\n  const {data ,isFetching,isSuccess} = useGetLoggedUserQuery(token);\r\n\r\n  const {data:data1,isSuccess:isSuccess1} = useGetAllEventsQuery(token);\r\n\r\n\r\n\r\n  \r\n\r\n  const columns=[\r\n    {field:\"id\",headerName:\"Events ID\",minWidth:300,flex:1},\r\n    {\r\n        field:\"event\",\r\n        headerName:\"Event Name\",\r\n        minWidth:300,\r\n        flex:0.5,\r\n       \r\n    },\r\n    {\r\n        field:\"description\",\r\n        headerName:\"Event Descriptions\",\r\n        minWidth:300,\r\n        flex:0.3,\r\n    },\r\n    {\r\n        field:\"s_t\",\r\n        headerName:\"Start time\",\r\n        type:\"number\",\r\n        minWidth:300,\r\n        flex:0.5,\r\n    },\r\n\r\n    {\r\n      field:\"d_o_w\",\r\n      headerName:\"Day Of Week\",\r\n      minWidth:300,\r\n      flex:0.3,\r\n  },\r\n\r\n    {\r\n      field:\"e_t\",\r\n      headerName:\"End time\",\r\n      type:\"number\",\r\n      minWidth:300,\r\n      flex:0.5,\r\n  },\r\n\r\n  \r\n    {\r\n      field:\"actions\",\r\n      flex:0.3,\r\n      headerName:\"Actions\",\r\n      type:\"number\",\r\n      sortable:false,\r\n      renderCell:(params)=>{\r\n        return(\r\n          <Link to={`/event_scheduled/${params.getValue(params.id,\"id\")}`}>\r\n\r\n                <LaunchIcon/>\r\n\r\n          </Link>\r\n          \r\n        );\r\n      },\r\n      \r\n    },\r\n\r\n\r\n];\r\n\r\nlet rows=[];\r\n\r\n\r\n    \r\nif(isSuccess1){\r\n  events=Object.values(data1.events);\r\n\r\n  events.forEach((item)=>{\r\n    \r\n    rows.push({\r\n      event:item.event_name,\r\n      id:item.id,\r\n      description:item.description,\r\n      e_t:item.end_time+\" : \"+\"00\",\r\n      s_t:item.start_time+\" : \"+\"00\",\r\n      d_o_w:item.day_of_the_week,\r\n  \r\n  \r\n  });\r\n  \r\n  });\r\n\r\n}\r\n\r\n \r\n\r\n\r\n  useEffect(()=>{\r\n    if(data && isSuccess){\r\n\r\n      setUserData({\r\n        email:data.user.email,\r\n        name:data.user.name,\r\n\r\n      })\r\n\r\n    }\r\n\r\n    if(data1 && isSuccess1){\r\n\r\n      \r\n\r\n      events=Object.values(data1.events);\r\n      \r\n\r\n      // events.forEach((item)=>{\r\n\r\n      //   console.log(item);\r\n      // })\r\n\r\n    }\r\n  },[data,isSuccess,isSuccess1,data1])\r\n\r\n  \r\n  return (\r\n\r\n<Fragment>\r\n  {isFetching ? (\r\n    <Spinner\r\n  thickness='4px'\r\n  speed='0.65s'\r\n  emptyColor='gray.200'\r\n  color='blue.500'\r\n  size='xl'\r\n/>\r\n  ):(\r\n\r\n    <Fragment>\r\n\r\n<div className=\"myOrdersPage\">\r\n            <DataGrid\r\n              rows={rows}\r\n              columns={columns}\r\n              pageSize={10}\r\n              disableSelectionOnClick\r\n              className=\"myOrdersTable\"\r\n              autoHeight\r\n            />\r\n  \r\n            {data && <Typography id=\"myOrdersHeading\">{data.user.name}'s Events</Typography>}\r\n          </div>\r\n\r\n\r\n       \r\n    </Fragment>\r\n    \r\n\r\n  )}\r\n</Fragment>\r\n\r\n\r\n\r\n\r\n   \r\n  )\r\n}\r\n\r\nexport default Home","C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\sevices\\LocalStorageServices.js",[],[],"C:\\Users\\SAURAV SUMAN\\Desktop\\Ominify Project\\frontend\\src\\component\\home\\EvenDetails.js",["99","100","101","102","103","104"],[],{"ruleId":"105","severity":1,"message":"106","line":29,"column":17,"nodeType":"107","messageId":"108","endLine":29,"endColumn":26},{"ruleId":"105","severity":1,"message":"109","line":31,"column":9,"nodeType":"107","messageId":"108","endLine":31,"endColumn":15},{"ruleId":"110","severity":1,"message":"111","line":123,"column":17,"nodeType":"112","endLine":123,"endColumn":29},{"ruleId":"105","severity":1,"message":"106","line":34,"column":19,"nodeType":"107","messageId":"108","endLine":34,"endColumn":28},{"ruleId":"105","severity":1,"message":"109","line":36,"column":11,"nodeType":"107","messageId":"108","endLine":36,"endColumn":17},{"ruleId":"105","severity":1,"message":"113","line":9,"column":32,"nodeType":"107","messageId":"108","endLine":9,"endColumn":53},{"ruleId":"105","severity":1,"message":"114","line":90,"column":19,"nodeType":"107","messageId":"108","endLine":90,"endColumn":27},{"ruleId":"105","severity":1,"message":"106","line":97,"column":15,"nodeType":"107","messageId":"108","endLine":97,"endColumn":24},{"ruleId":"105","severity":1,"message":"109","line":99,"column":7,"nodeType":"107","messageId":"108","endLine":99,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":11,"column":16,"nodeType":"117","messageId":"118","endLine":11,"endColumn":18},{"ruleId":"105","severity":1,"message":"119","line":1,"column":10,"nodeType":"107","messageId":"108","endLine":1,"endColumn":16},{"ruleId":"105","severity":1,"message":"120","line":28,"column":10,"nodeType":"107","messageId":"108","endLine":28,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":117,"column":30,"nodeType":"117","messageId":"123","endLine":117,"endColumn":31},{"ruleId":"121","severity":1,"message":"122","line":118,"column":32,"nodeType":"117","messageId":"123","endLine":118,"endColumn":33},{"ruleId":"124","severity":1,"message":"125","line":146,"column":14,"nodeType":"126","endLine":146,"endColumn":41},{"ruleId":"105","severity":1,"message":"127","line":26,"column":39,"nodeType":"107","messageId":"108","endLine":26,"endColumn":46},{"ruleId":"115","severity":1,"message":"116","line":32,"column":10,"nodeType":"117","messageId":"118","endLine":32,"endColumn":12},{"ruleId":"128","severity":1,"message":"129","line":32,"column":23,"nodeType":"130","messageId":"131","endLine":32,"endColumn":25},{"ruleId":"115","severity":1,"message":"132","line":32,"column":29,"nodeType":"117","messageId":"118","endLine":32,"endColumn":31},{"ruleId":"128","severity":1,"message":"129","line":32,"column":44,"nodeType":"130","messageId":"131","endLine":32,"endColumn":46},{"ruleId":"115","severity":1,"message":"116","line":32,"column":50,"nodeType":"117","messageId":"118","endLine":32,"endColumn":52},"no-unused-vars","'isVisible' is assigned a value but never used.","Identifier","unusedVar","'onOpen' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useGetLoggedUserQuery' is defined but never used.","'setError' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'userData' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","react-hooks/exhaustive-deps","Assignments to the 'events' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'isError' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Expected '!==' and instead saw '!='."]